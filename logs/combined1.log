{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:23"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:23"}
