{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:23"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:23"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:23"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:24"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"error","message":"Unable to start server: relation \"admin\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async services.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:24"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:24"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:24"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:27"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:27"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:27"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:27"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:27"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:44"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:44"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:44"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:44"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:46"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:46"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:45:47"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:45:47"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:45:47"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:46:28"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:46:28"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:28"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:46:28"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:46:28"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:46:31"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:31"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:46:31"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:46:31"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:46:54"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"error","message":"Unable to start server: relation \"orders\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":104,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":104,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async payments.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:46:54"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:46:54"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:46:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:47:15"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:15"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:47:15"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:47:15"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:47:18"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"error","message":"Unable to start server: could not open relation with OID 727996","name":"SequelizeDatabaseError","original":{"code":"XX000","file":"relation.c","length":98,"line":"61","name":"error","routine":"relation_open","severity":"ERROR","sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;"},"parameters":{},"parent":{"code":"XX000","file":"relation.c","length":98,"line":"61","name":"error","routine":"relation_open","severity":"ERROR","sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;"},"sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.showIndex (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:254:12)\n    at async assignments.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:988:29)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:47:18"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:47:18"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:47:18"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:13"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:13"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:13"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:13"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:22"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:25"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"clients_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"clients_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(clients_id_seq, 2200) already exists.","file":"nbtinsert.c","length":257,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(clients_id_seq, 2200) already exists.","file":"nbtinsert.c","length":257,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async clients.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:25"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:25"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:25"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:29"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:29"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:29"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:29"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:29"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:29"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:33"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:33"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:33"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:34"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:34"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:34"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:36"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:36"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:36"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:36"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:40"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:40"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:48:40"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:48:40"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:48:40"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:48:40"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:49:53"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:49:53"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:53"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:49:53"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:49:53"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:49:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:49:57"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:49:57"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:49:57"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:00"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:00"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:00"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:00"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:15"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"clients_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"clients_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(clients_id_seq, 2200) already exists.","file":"nbtinsert.c","length":257,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(clients_id_seq, 2200) already exists.","file":"nbtinsert.c","length":257,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async clients.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:15"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:15"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:15"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:18"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:18"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:18"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:18"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:21"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:21"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:21"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:22"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:25"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:25"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:25"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:25"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:27"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:27"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"services_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"services_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(services_id_seq, 2200) already exists.","file":"nbtinsert.c","length":258,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(services_id_seq, 2200) already exists.","file":"nbtinsert.c","length":258,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async services.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:28"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:28"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:28"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:30"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:30"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:30"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:30"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:31"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:31"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:31"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:31"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:33"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"error","message":"Unable to start server: relation \"orders\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":104,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":104,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async payments.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:33"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:34"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:34"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:34"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:48"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:48"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:48"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:48"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:53"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:53"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:53"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:54"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:54"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:50:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"error","message":"Unable to start server: relation \"clients\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":105,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":105,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:50:58"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:50:58"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:50:58"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:10"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"error","message":"Unable to start server: relation \"clients\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":105,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":105,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:10"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:10"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:10"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:13"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:13"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:13"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:13"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:13"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:16"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:16"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:16"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:16"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:16"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:19"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:19"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:19"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:19"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:19"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:19"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"error","message":"Unable to start server: relation \"services\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:22"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:44"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"error","message":"Unable to start server: relation \"services\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:44"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:44"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:44"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:47"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:47"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:47"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:47"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:50"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"error","message":"Unable to start server: relation \"services\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:50"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:50"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:50"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:53"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:54"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:54"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:54"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:54"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:51:57"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:51:57"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:51:57"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:06"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:52:06"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:06"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:52:06"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:52:06"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:09"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"error","message":"Unable to start server: Cannot read properties of null (reading '1')","stack":"TypeError: Cannot read properties of null (reading '1')\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:97:86)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:16\n    at async PostgresQueryInterface.showIndex (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:254:12)\n    at async assignments.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:988:29)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:09"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:52:09"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:52:09"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:16"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:52:16"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:16"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:52:16"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:52:16"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:20"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:20"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:52:20"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:52:20"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:25"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:52:25"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:52:25"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:52:25"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:00"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:00"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:00"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:00"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:07"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:07"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:07"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:07"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:10"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:10"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:10"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:10"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:10"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:13"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"error","message":"Unable to start server: relation \"clients\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":105,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":105,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:13"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:13"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:13"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:19"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:19"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:19"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:19"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:19"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:23"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"error","message":"Unable to start server: could not open relation with OID 735623","name":"SequelizeDatabaseError","original":{"code":"XX000","file":"relation.c","length":98,"line":"61","name":"error","routine":"relation_open","severity":"ERROR","sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;"},"parameters":{},"parent":{"code":"XX000","file":"relation.c","length":98,"line":"61","name":"error","routine":"relation_open","severity":"ERROR","sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;"},"sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.showIndex (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:254:12)\n    at async transactions.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:988:29)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:24"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:24"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:24"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:34"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:34"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:34"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:35"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:35"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:35"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:35"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:35"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:35"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:45"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:46"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:46"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:46"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:48"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"clients_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"clients_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(clients_id_seq, 2200) already exists.","file":"nbtinsert.c","length":257,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(clients_id_seq, 2200) already exists.","file":"nbtinsert.c","length":257,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async clients.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:48"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:49"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:49"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:49"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:54"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:54"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:53:54"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:53:54"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:53:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:03"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:03"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:03"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:03"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:03"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:03"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:03"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:05"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:05"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:06"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:06"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:06"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:06"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:09"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:09"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:09"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:09"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:09"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:09"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:12"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:12"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:12"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:12"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:15"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:15"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:16"}
{"level":"error","message":"Unable to start server: could not open relation with OID 737323","name":"SequelizeDatabaseError","original":{"code":"XX000","file":"relation.c","length":98,"line":"61","name":"error","routine":"relation_open","severity":"ERROR","sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;"},"parameters":{},"parent":{"code":"XX000","file":"relation.c","length":98,"line":"61","name":"error","routine":"relation_open","severity":"ERROR","sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;"},"sql":"SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.showIndex (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:254:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:988:29)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:16"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:16"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:16"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:22"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:34"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:34"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:34"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:34"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:36"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:36"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:36"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:36"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:36"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:39"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:39"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:39"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:39"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:39"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:42"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:42"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:42"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:42"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:45"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:45"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:45"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:45"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:45"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:46"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:46"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:51"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"error","message":"Unable to start server: relation \"orders\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":104,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":104,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async payments.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:51"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:51"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:51"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:54"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"errors":[{"instance":null,"message":"relname must be unique","origin":"DB","path":"relname","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"admin_id_seq"},{"instance":null,"message":"relnamespace must be unique","origin":"DB","path":"relnamespace","type":"unique violation","validatorArgs":[],"validatorKey":"not_unique","validatorName":null,"value":"2200"}],"fields":{"relname":"admin_id_seq","relnamespace":"2200"},"level":"error","message":"Unable to start server: Validation error","name":"SequelizeUniqueConstraintError","original":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"parent":{"code":"23505","constraint":"pg_class_relname_nsp_index","detail":"Key (relname, relnamespace)=(admin_id_seq, 2200) already exists.","file":"nbtinsert.c","length":255,"line":"673","name":"error","routine":"_bt_check_unique","schema":"pg_catalog","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","table":"pg_class"},"sql":"CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async admin.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:54"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:54"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:54"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"error","message":"Unable to start server: relation \"admin\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async services.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:54:57"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:54:57"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:54:57"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:55:01"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"error","message":"Unable to start server: relation \"services\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":106,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async orders.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:01"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:55:01"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:55:01"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:55:04"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"error","message":"Unable to start server: relation \"admin\" does not exist","name":"SequelizeDatabaseError","original":{"code":"42P01","file":"namespace.c","length":103,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"parameters":{},"parent":{"code":"42P01","file":"namespace.c","length":103,"line":"639","name":"error","routine":"RangeVarGetRelidExtended","severity":"ERROR","sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));"},"sql":"CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","stack":"Error\n    at Query.run (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)\n    at C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async PostgresQueryInterface.createTable (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:98:12)\n    at async services.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\model.js:942:7)\n    at async Sequelize.sync (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async start (C:\\Users\\Hp\\Desktop\\New folder (3)\\service\\app.js:52:5)","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 00:55:04"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 00:55:04"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 00:55:04"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:04:23"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:23"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:04:24"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"admin\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"admin\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"email\" VARCHAR(255), \"password_hash\" TEXT, \"role\" VARCHAR(255), \"is_active\" BOOLEAN DEFAULT true, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"clients\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"clients\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"email\" VARCHAR(255) NOT NULL UNIQUE, \"phone\" VARCHAR(255) NOT NULL, \"password_hash\" VARCHAR(255), \"balance\" DECIMAL(10,2) DEFAULT 0, \"refresh_token\" VARCHAR(500), \"refresh_token_expires_at\" TIMESTAMP WITH TIME ZONE, \"is_active\" BOOLEAN DEFAULT false, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"services\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"services\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255) NOT NULL, \"price\" FLOAT NOT NULL, \"duration\" INTEGER NOT NULL, \"description\" TEXT, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"orders\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\";","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TYPE IF EXISTS \"public\".\"enum_orders_status\"; DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"orders\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"service_id\" BIGINT NOT NULL REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"owner_id\" BIGINT NOT NULL REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"order_date\" TIMESTAMP WITH TIME ZONE, \"status\" \"public\".\"enum_orders_status\" NOT NULL DEFAULT 'pending', PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"employees\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"employees\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), \"position\" VARCHAR(255), \"email\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"assignments\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"assignments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL, \"employee_id\" BIGINT NOT NULL, \"assigned_at\" TIMESTAMP WITH TIME ZONE, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"payments\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"payments\" (\"id\"  BIGSERIAL , \"order_id\" BIGINT NOT NULL REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE, \"amount\" DECIMAL(10,2) NOT NULL, \"paid_at\" TIMESTAMP WITH TIME ZONE, \"payment_method\" VARCHAR(255), \"status\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"transactions\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"transactions\" (\"id\"  BIGSERIAL , \"client_id\" BIGINT NOT NULL, \"type\" VARCHAR(255), \"amount\" DECIMAL(10,2) NOT NULL, \"description\" TEXT, \"created_at\" TIMESTAMP WITH TIME ZONE NOT NULL, \"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"technologies\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"technologies\" (\"id\"  BIGSERIAL , \"name\" VARCHAR(255), PRIMARY KEY (\"id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): DROP TABLE IF EXISTS \"service_technology\" CASCADE;","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS \"service_technology\" (\"service_id\" BIGINT NOT NULL , \"technology_id\" BIGINT NOT NULL , PRIMARY KEY (\"service_id\",\"technology_id\"));","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:24"}
{"level":"info","message":"Database tables recreated successfully","timestamp":"2025-06-12 11:04:24"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:04:24"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:04:52"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:52"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:04:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:04:53"}
{"level":"info","message":"Database sync completed in undefined mode","timestamp":"2025-06-12 11:04:53"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:04:53"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:05:19"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:05:19"}
{"level":"info","message":"Ma'lumotlar bazasi sinxronizatsiyasi undefined rejimida yakunlandi","timestamp":"2025-06-12 11:05:19"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:05:19"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:06:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:06:22"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:06:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:06:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:08:18"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:18"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:08:18"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:08:18"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:08:26"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:08:26"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:08:26"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:08:26"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:10:22"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:10:22"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:10:22"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:10:22"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:11:44"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:44"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:44"}
{"level":"info","message":"Database sync completed in undefined mode","timestamp":"2025-06-12 11:11:44"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:11:45"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:11:53"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:11:53"}
{"level":"info","message":"Database sync completed in undefined mode","timestamp":"2025-06-12 11:11:53"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:11:53"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:12:06"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:06"}
{"level":"info","message":"Database sync completed in undefined mode","timestamp":"2025-06-12 11:12:06"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:12:06"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:12:24"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:24"}
{"level":"info","message":"Database sync completed in undefined mode","timestamp":"2025-06-12 11:12:24"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:12:24"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:12:38"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:38"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:12:38"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:12:38"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:12:41"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:41"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:12:41"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:12:41"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:12:55"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:12:55"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:12:55"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:12:55"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:13:01"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:01"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:13:01"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:13:01"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","timestamp":"2025-06-12 11:13:19"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'admin' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'admin' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"password_hash\" TYPE TEXT;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"role\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"role\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" SET DEFAULT true;ALTER TABLE \"admin\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"admin\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'clients'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'clients' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'clients' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"email\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"clients\"  ADD UNIQUE (\"email\");ALTER TABLE \"clients\" ALTER COLUMN \"email\" TYPE VARCHAR(255)  ;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"phone\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"phone\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"password_hash\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"balance\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" SET DEFAULT 0;ALTER TABLE \"clients\" ALTER COLUMN \"balance\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token\" TYPE VARCHAR(500);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"refresh_token_expires_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" DROP NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" SET DEFAULT false;ALTER TABLE \"clients\" ALTER COLUMN \"is_active\" TYPE BOOLEAN;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"clients\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'clients' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'services'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'services' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'services' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"name\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"price\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"price\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"price\" TYPE FLOAT;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"duration\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"duration\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"duration\" TYPE INTEGER;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" DROP CONSTRAINT \"services_owner_id_fkey\"","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"services\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"services\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'services' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'orders'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_orders_status' GROUP BY 1","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'orders' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'orders' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_client_id_fkey\"","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"client_id\") REFERENCES \"clients\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_service_id_fkey\"","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"service_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"service_id\") REFERENCES \"services\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" DROP CONSTRAINT \"orders_owner_id_fkey\"","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"owner_id\" SET NOT NULL;ALTER TABLE \"orders\"  ADD FOREIGN KEY (\"owner_id\") REFERENCES \"admin\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" DROP DEFAULT;ALTER TABLE \"orders\" ALTER COLUMN \"order_date\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET NOT NULL;ALTER TABLE \"orders\" ALTER COLUMN \"status\" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE \"public\".\"enum_orders_status\" AS ENUM(''pending'', ''in_progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE \"orders\" ALTER COLUMN \"status\" TYPE \"public\".\"enum_orders_status\" USING (\"status\"::\"public\".\"enum_orders_status\");","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'orders' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"position\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"position\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP NOT NULL;ALTER TABLE \"employees\" ALTER COLUMN \"email\" DROP DEFAULT;ALTER TABLE \"employees\" ALTER COLUMN \"email\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'assignments'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'assignments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'assignments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"order_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" SET NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"employee_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP NOT NULL;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" DROP DEFAULT;ALTER TABLE \"assignments\" ALTER COLUMN \"assigned_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'payments'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'payments' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'payments' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" DROP CONSTRAINT \"payments_order_id_fkey\"","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"order_id\" SET NOT NULL;ALTER TABLE \"payments\"  ADD FOREIGN KEY (\"order_id\") REFERENCES \"orders\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"paid_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"payment_method\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP NOT NULL;ALTER TABLE \"payments\" ALTER COLUMN \"status\" DROP DEFAULT;ALTER TABLE \"payments\" ALTER COLUMN \"status\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'payments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'transactions'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'transactions' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'transactions' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:19"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"client_id\" TYPE BIGINT;","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"type\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"amount\" TYPE DECIMAL(10,2);","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"description\" TYPE TEXT;","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"created_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" SET NOT NULL;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" DROP DEFAULT;ALTER TABLE \"transactions\" ALTER COLUMN \"updated_at\" TYPE TIMESTAMP WITH TIME ZONE;","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'transactions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'technologies'","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'technologies' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'technologies' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP NOT NULL;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" DROP DEFAULT;ALTER TABLE \"technologies\" ALTER COLUMN \"name\" TYPE VARCHAR(255);","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'technologies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'service_technology'","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT pk.constraint_type as \"Constraint\",c.column_name as \"Field\", c.column_default as \"Default\",c.is_nullable as \"Null\", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as \"Type\", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS \"special\", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS \"Comment\" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'service_technology' AND c.table_schema = 'public'","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'service_technology' AND tc.table_catalog = 'it'","timestamp":"2025-06-12 11:13:20"}
{"level":"debug","message":"Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'service_technology' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;","timestamp":"2025-06-12 11:13:20"}
{"level":"info","message":"Ma'lumotlar bazasi jadvallari xavfsiz tarzda yangilandi","timestamp":"2025-06-12 11:13:20"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-06-12 11:13:20"}
